{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "caab7b8dd709679c",
   "metadata": {
    "id": "caab7b8dd709679c"
   },
   "source": [
    "# CafeF Bank News Crawler\n",
    "## Professional web scraping tool for Vietnamese bank news with parallel processing\n",
    "## Last Updated: 2025\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbf84959bcd07ea3",
   "metadata": {
    "id": "cbf84959bcd07ea3"
   },
   "source": [
    "## 1. Import Dependencies\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a1a763c1bb8ab299",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-07-27T12:52:58.536420Z",
     "start_time": "2025-07-27T12:52:58.533065Z"
    },
    "id": "a1a763c1bb8ab299"
   },
   "outputs": [],
   "source": [
    "import asyncio\n",
    "from concurrent.futures import ThreadPoolExecutor\n",
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import time\n",
    "from urllib.parse import urljoin\n",
    "import os\n",
    "from datetime import datetime\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6fe5e7098ee9676",
   "metadata": {
    "id": "c6fe5e7098ee9676"
   },
   "source": [
    "## 2. Configuration\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8d4a58addfcf0b0a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-07-27T12:52:58.554390Z",
     "start_time": "2025-07-27T12:52:58.552072Z"
    },
    "id": "8d4a58addfcf0b0a"
   },
   "outputs": [],
   "source": [
    "# Crawler settings\n",
    "CRAWLER_CONFIG = {\n",
    "    'max_concurrent_workers': 5,\n",
    "    'request_delay': 1,\n",
    "    'timeout': 10,\n",
    "    'content_workers': 3\n",
    "}\n",
    "\n",
    "# Bank codes to crawl\n",
    "BANK_KEYWORDS = {\n",
    "    \"ACB\": [\"ACB\",\"Ngân hàng Á Châu\",\"ACB Bank\",\"acb bank\"],\n",
    "    \"BAB\": [\"BAB\",\"Bac A Bank\",\"Bắc Á Bank\",\"bac a bank\"],\n",
    "    \"BID\": [\"BID\",\"BIDV\",\"Ngân hàng TMCP Đầu tư và Phát triển Việt Nam\"],\n",
    "    \"CTG\": [\"CTG\",\"VietinBank\",\"Ngân hàng TMCP Công Thương Việt Nam\",\"vietin bank\"],\n",
    "    \"EIB\": [\"EIB\",\"Eximbank\",\"Ngân hàng TMCP Xuất nhập khẩu Việt Nam\",\"exim bank\"],\n",
    "    \"HDB\": [\"HDB\",\"HDBank\",\"hd bank\"],\n",
    "    \"LPB\": [\"LPB\",\"LienVietPostBank\",\"Liên Việt Post Bank\",\"LPBank\",\"Ngân hàng TMCP Bưu điện Liên Việt\",\"lpbank\"],\n",
    "    \"MBB\": [\"MBB\",\"MB\",\"MB Bank\",\"Ngân hàng TMCP Quân đội\",\"mbbank\"],\n",
    "    \"MSB\": [\"MSB\",\"Maritime Bank\",\"Ngân hàng TMCP Hàng Hải Việt Nam\",\"maritimebank\"],\n",
    "    \"NVB\": [\"NVB\",\"NCB\",\"Ngân hàng Quốc Dân\",\"Ngân hàng TMCP Quốc Dân\",\"ngan hang quoc dan\"],\n",
    "    \"OCB\": [\"OCB\",\"Orient Commercial Bank\",\"Ngân hàng TMCP Phương Đông\",\"Phương Đông Bank\",\"phuong dong bank\"],\n",
    "    \"SHB\": [\"SHB\",\"Ngân hàng TMCP Sài Gòn - Hà Nội\"],\n",
    "    \"SSB\": [\"SSB\",\"SeABank\",\"Ngân hàng TMCP Đông Nam Á\",\"sea bank\"],\n",
    "    \"STB\": [\"STB\",\"Sacombank\",\"Ngân hàng TMCP Sài Gòn Thương Tín\"],\n",
    "    \"TCB\": [\"TCB\",\"Techcombank\",\"Ngân hàng TMCP Kỹ thương Việt Nam\",\"tech com bank\"],\n",
    "    \"TPB\": [\"TPB\",\"TPBank\",\"Tiên Phong Bank\",\"Ngân hàng TMCP Tiên Phong\"],\n",
    "    \"VCB\": [\"VCB\",\"Vietcombank\",\"Ngân hàng TMCP Ngoại thương Việt Nam\",\"vietcom bank\"],\n",
    "    \"VIB\": [\"VIB\",\"Ngân hàng TMCP Quốc tế Việt Nam\"],\n",
    "    \"VPB\": [\"VPB\",\"VPBank\",\"Ngân hàng TMCP Việt Nam Thịnh Vượng\",\"vp bank\"]\n",
    "}\n",
    "\n",
    "# Filter keywords\n",
    "FILTER_KEYWORDS = [\"tin đồn\",\"đính chính tin đồn\", \"khẳng định thông tin lan truyền\"]\n",
    "\n",
    "# Output directory\n",
    "OUTPUT_DIR = \"crawled_data\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4011c1fa25c63bfe",
   "metadata": {
    "id": "4011c1fa25c63bfe"
   },
   "source": [
    "## 3. CafeF News Crawler Class\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "18ecdce3c226f24c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-07-27T12:52:58.574951Z",
     "start_time": "2025-07-27T12:52:58.567167Z"
    },
    "id": "18ecdce3c226f24c"
   },
   "outputs": [],
   "source": [
    "class CafeFNewsCrawler:\n",
    "    \"\"\"Professional news crawler for CafeF bank news with parallel processing\"\"\"\n",
    "\n",
    "    def __init__(self, max_concurrent_workers=5, request_delay=0.5, timeout=10, content_workers=3):\n",
    "        self.base_url = \" https://cafef.vn/\"\n",
    "        self.max_concurrent_workers = max_concurrent_workers\n",
    "        self.request_delay = request_delay\n",
    "        self.timeout = timeout\n",
    "        self.content_workers = content_workers\n",
    "        self.http_session = requests.Session()\n",
    "\n",
    "        # Set user agent to avoid blocking\n",
    "        self.http_session.headers.update({\n",
    "            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36'\n",
    "        })\n",
    "\n",
    "    def crawl_bank_news_by_keywords(self, bank_keywords):\n",
    "        \"\"\"Crawl bank news for multiple keywords concurrently\"\"\"\n",
    "        print(f\"Starting parallel crawl for {len(bank_keywords)} banks...\")\n",
    "\n",
    "        with ThreadPoolExecutor(max_workers=self.max_concurrent_workers) as executor:\n",
    "            crawl_futures = [\n",
    "                executor.submit(self.crawl_news_for_single_bank, keyword)\n",
    "                for keyword in bank_keywords\n",
    "            ]\n",
    "\n",
    "            all_news_articles = []\n",
    "            for future in crawl_futures:\n",
    "                bank_articles = future.result()\n",
    "                all_news_articles.extend(bank_articles)\n",
    "\n",
    "        return pd.DataFrame(all_news_articles)\n",
    "\n",
    "    def crawl_news_for_single_bank(self, bank_code):\n",
    "        \"\"\"Crawl news for a single bank code\"\"\"\n",
    "        current_page = f\"/{bank_code.lower()}.html\"\n",
    "        bank_articles = []\n",
    "\n",
    "        while True:\n",
    "            page_url = urljoin(self.base_url, current_page)\n",
    "            print(f\"Crawling: {page_url}\")\n",
    "\n",
    "            try:\n",
    "                response = self.http_session.get(page_url, timeout=self.timeout)\n",
    "                response.raise_for_status()\n",
    "                soup = BeautifulSoup(response.content, \"html.parser\")\n",
    "\n",
    "                article_items = soup.select(\".tlitem\")\n",
    "                if not article_items:\n",
    "                    break\n",
    "\n",
    "                # Collect article information\n",
    "                article_urls = []\n",
    "                article_titles = []\n",
    "\n",
    "                for item in article_items:\n",
    "                    try:\n",
    "                        article_link = urljoin(self.base_url, item.h3.a[\"href\"])\n",
    "                        article_title = item.h3.a.get_text(strip=True)\n",
    "                        article_urls.append(article_link)\n",
    "                        article_titles.append(article_title)\n",
    "                    except AttributeError:\n",
    "                        continue\n",
    "\n",
    "                # Extract article content in parallel\n",
    "                with ThreadPoolExecutor(max_workers=self.content_workers) as executor:\n",
    "                    content_futures = [\n",
    "                        executor.submit(self.extract_article_content, url)\n",
    "                        for url in article_urls\n",
    "                    ]\n",
    "\n",
    "                    for i, future in enumerate(content_futures):\n",
    "                        article_content_data = future.result()\n",
    "                        if article_content_data:\n",
    "                            published_time, article_content = article_content_data\n",
    "                            bank_articles.append({\n",
    "                                \"Keyword\": bank_code,\n",
    "                                \"Time\": published_time,\n",
    "                                \"Title\": article_titles[i],\n",
    "                                \"Content\": article_content,\n",
    "                                \"URL\": article_urls[i],\n",
    "                                \"Crawled_At\": datetime.now().isoformat()\n",
    "                            })\n",
    "\n",
    "                # Find next page\n",
    "                try:\n",
    "                    next_page_link = soup.select_one(\".page\").find(\"a\", class_='pagination-next')['href']\n",
    "                    if next_page_link == current_page:\n",
    "                        break\n",
    "                    current_page = next_page_link\n",
    "                except (AttributeError, TypeError):\n",
    "                    break\n",
    "\n",
    "                time.sleep(self.request_delay)\n",
    "\n",
    "            except Exception as e:\n",
    "                print(f\"Error crawling {page_url}: {e}\")\n",
    "                break\n",
    "\n",
    "        print(f\"✅ Found {len(bank_articles)} articles for '{bank_code}'\")\n",
    "        return bank_articles\n",
    "\n",
    "    def extract_article_content(self, article_url):\n",
    "        \"\"\"Extract detailed content of an article\"\"\"\n",
    "        try:\n",
    "            response = self.http_session.get(article_url, timeout=self.timeout)\n",
    "            response.raise_for_status()\n",
    "            soup = BeautifulSoup(response.content, \"html.parser\")\n",
    "\n",
    "            # Get publication time\n",
    "            time_element = soup.select_one(\"span.pdate\") or soup.select_one(\"span.date\")\n",
    "            published_time = time_element.get_text(strip=True) if time_element else \"Unknown\"\n",
    "\n",
    "            # Get article content\n",
    "            content_container = (\n",
    "                soup.select_one(\".detail-content.afcbc-body\") or\n",
    "                soup.select_one(\".detail-content\")\n",
    "            )\n",
    "\n",
    "            if not content_container:\n",
    "                return None\n",
    "\n",
    "            content_paragraphs = content_container.find_all(\"p\")\n",
    "            full_content = \"\\n\".join(\n",
    "                p.get_text(strip=True)\n",
    "                for p in content_paragraphs\n",
    "                if p.get_text(strip=True)\n",
    "            )\n",
    "\n",
    "            return published_time, full_content\n",
    "\n",
    "        except Exception as e:\n",
    "            print(f\"Error extracting {article_url}: {e}\")\n",
    "            return None\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c707cc57688f987",
   "metadata": {
    "id": "3c707cc57688f987"
   },
   "source": [
    "## 4. Utility Functions\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5edb425dc46a01c7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-07-27T12:52:58.588135Z",
     "start_time": "2025-07-27T12:52:58.585252Z"
    },
    "id": "5edb425dc46a01c7"
   },
   "outputs": [],
   "source": [
    "def setup_output_directory(directory_name):\n",
    "    \"\"\"Create output directory if it doesn't exist\"\"\"\n",
    "    os.makedirs(directory_name, exist_ok=True)\n",
    "    print(f\"📁 Output directory: {os.path.abspath(directory_name)}\")\n",
    "    return directory_name\n",
    "\n",
    "def save_dataframe(df, filename, output_dir):\n",
    "    \"\"\"Save DataFrame to CSV with proper path handling\"\"\"\n",
    "    file_path = os.path.join(output_dir, filename)\n",
    "    df.to_csv(file_path, index=False)\n",
    "    print(f\"📝 Saved {len(df)} records to {file_path}\")\n",
    "    return file_path\n",
    "\n",
    "def filter_articles_by_keywords(df, keywords, search_columns=['Title', 'Content']):\n",
    "    \"\"\"Filter articles containing specific keywords\"\"\"\n",
    "    if df.empty:\n",
    "        return df\n",
    "\n",
    "    filtered_df = df[\n",
    "        df[search_columns].apply(\n",
    "            lambda row: any(\n",
    "                keyword.lower() in str(row[col]).lower()\n",
    "                for keyword in keywords\n",
    "                for col in search_columns\n",
    "            ), axis=1\n",
    "        )\n",
    "    ]\n",
    "    return filtered_df\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a5457cee6386a12",
   "metadata": {
    "id": "8a5457cee6386a12"
   },
   "source": [
    "## 5. Data Crawling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7eb2e0ab5d21e4fa",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-07-27T12:54:58.229739Z",
     "start_time": "2025-07-27T12:52:58.598739Z"
    },
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "7eb2e0ab5d21e4fa",
    "outputId": "4cd8b820-72d4-4d92-cebd-b38b1b3f2e05"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=== CafeF Bank News Crawler Started ===\n",
      "📁 Output directory: e:\\OneDriveHUST\\HUST\\20241-1.Stock Rumours\\000 - Main Article\\Data\\crawled_data\n",
      "\n",
      "=== Crawling 19 banks concurrently ===\n",
      "Starting parallel crawl for 19 banks...\n",
      "Crawling: https://cafef.vn/acb.html\n",
      "Crawling: https://cafef.vn/bab.html\n",
      "Crawling: https://cafef.vn/bid.html\n",
      "Crawling: https://cafef.vn/ctg.html\n",
      "Crawling: https://cafef.vn/eib.html\n",
      "✅ Found 6 articles for 'BAB'\n",
      "Crawling: https://cafef.vn/hdb.html\n",
      "Crawling: https://cafef.vn/ctg/trang-2.html\n",
      "Crawling: https://cafef.vn/acb/trang-2.html\n",
      "Crawling: https://cafef.vn/bid/trang-2.html\n",
      "Crawling: https://cafef.vn/eib/trang-2.html\n",
      "Crawling: https://cafef.vn/hdb/trang-2.html\n",
      "Crawling: https://cafef.vn/ctg/trang-3.htmlCrawling: https://cafef.vn/acb/trang-3.html\n",
      "Crawling: https://cafef.vn/bid/trang-3.html\n",
      "\n",
      "Crawling: https://cafef.vn/eib/trang-3.html\n",
      "Crawling: https://cafef.vn/hdb/trang-3.html\n",
      "Crawling: https://cafef.vn/ctg/trang-4.html\n",
      "Crawling: https://cafef.vn/bid/trang-4.html\n",
      "Crawling: https://cafef.vn/eib/trang-4.html\n",
      "Crawling: https://cafef.vn/acb/trang-4.html\n",
      "Crawling: https://cafef.vn/hdb/trang-4.html\n",
      "Crawling: https://cafef.vn/ctg/trang-5.html\n",
      "Crawling: https://cafef.vn/bid/trang-5.html\n",
      "Crawling: https://cafef.vn/eib/trang-5.html\n",
      "Crawling: https://cafef.vn/acb/trang-5.html\n",
      "Crawling: https://cafef.vn/hdb/trang-5.html\n",
      "Crawling: https://cafef.vn/ctg/trang-6.html\n",
      "Crawling: https://cafef.vn/bid/trang-6.html\n",
      "Crawling: https://cafef.vn/acb/trang-6.html\n",
      "Crawling: https://cafef.vn/hdb/trang-6.html\n",
      "Crawling: https://cafef.vn/eib/trang-6.html\n",
      "Crawling: https://cafef.vn/ctg/trang-7.html\n",
      "Crawling: https://cafef.vn/bid/trang-7.html\n",
      "Crawling: https://cafef.vn/acb/trang-7.html\n",
      "Crawling: https://cafef.vn/eib/trang-7.html\n",
      "Crawling: https://cafef.vn/hdb/trang-7.html\n",
      "Crawling: https://cafef.vn/eib/trang-8.html\n",
      "Crawling: https://cafef.vn/ctg/trang-8.html\n",
      "Crawling: https://cafef.vn/bid/trang-8.html\n",
      "Crawling: https://cafef.vn/acb/trang-8.html\n",
      "Crawling: https://cafef.vn/hdb/trang-8.html\n",
      "Crawling: https://cafef.vn/eib/trang-9.html\n",
      "Crawling: https://cafef.vn/bid/trang-9.html\n",
      "Crawling: https://cafef.vn/ctg/trang-9.html\n",
      "Crawling: https://cafef.vn/acb/trang-9.html\n",
      "Crawling: https://cafef.vn/hdb/trang-9.html\n",
      "✅ Found 158 articles for 'HDB'\n",
      "Crawling: https://cafef.vn/lpb.html\n",
      "Crawling: https://cafef.vn/bid/trang-10.html\n",
      "✅ Found 167 articles for 'BID'\n",
      "Crawling: https://cafef.vn/mbb.html\n",
      "Crawling: https://cafef.vn/eib/trang-10.html\n",
      "Crawling: https://cafef.vn/acb/trang-10.html\n",
      "Crawling: https://cafef.vn/ctg/trang-10.html\n",
      "Crawling: https://cafef.vn/lpb/trang-2.html\n",
      "Crawling: https://cafef.vn/eib/trang-11.html\n",
      "Crawling: https://cafef.vn/ctg/trang-11.html\n",
      "✅ Found 193 articles for 'EIB'\n",
      "Crawling: https://cafef.vn/msb.html\n",
      "Crawling: https://cafef.vn/mbb/trang-2.html\n",
      "✅ Found 182 articles for 'CTG'\n",
      "Crawling: https://cafef.vn/nvb.html\n",
      "Crawling: https://cafef.vn/acb/trang-11.html\n",
      "Crawling: https://cafef.vn/lpb/trang-3.html\n",
      "Crawling: https://cafef.vn/mbb/trang-3.html\n",
      "Crawling: https://cafef.vn/msb/trang-2.html\n",
      "Crawling: https://cafef.vn/nvb/trang-2.html\n",
      "Crawling: https://cafef.vn/lpb/trang-4.html\n",
      "Crawling: https://cafef.vn/acb/trang-12.html\n",
      "Crawling: https://cafef.vn/mbb/trang-4.html\n",
      "Crawling: https://cafef.vn/msb/trang-3.html\n",
      "Crawling: https://cafef.vn/nvb/trang-3.html\n",
      "Crawling: https://cafef.vn/acb/trang-13.html\n",
      "✅ Found 42 articles for 'NVB'\n",
      "Crawling: https://cafef.vn/ocb.html\n",
      "Crawling: https://cafef.vn/lpb/trang-5.html\n",
      "Crawling: https://cafef.vn/mbb/trang-5.html\n",
      "Crawling: https://cafef.vn/msb/trang-4.html\n",
      "Crawling: https://cafef.vn/acb/trang-14.html\n",
      "Crawling: https://cafef.vn/ocb/trang-2.html\n",
      "Crawling: https://cafef.vn/lpb/trang-6.html\n",
      "Crawling: https://cafef.vn/msb/trang-5.html\n",
      "Crawling: https://cafef.vn/mbb/trang-6.html\n",
      "Crawling: https://cafef.vn/ocb/trang-3.html\n",
      "Crawling: https://cafef.vn/acb/trang-15.html\n",
      "Crawling: https://cafef.vn/lpb/trang-7.html\n",
      "Crawling: https://cafef.vn/mbb/trang-7.html\n",
      "Crawling: https://cafef.vn/msb/trang-6.html\n",
      "Crawling: https://cafef.vn/acb/trang-16.html\n",
      "Crawling: https://cafef.vn/ocb/trang-4.html\n",
      "Crawling: https://cafef.vn/lpb/trang-8.html\n",
      "✅ Found 140 articles for 'LPB'\n",
      "Crawling: https://cafef.vn/shb.html\n",
      "Crawling: https://cafef.vn/mbb/trang-8.html\n",
      "Crawling: https://cafef.vn/msb/trang-7.html\n",
      "Crawling: https://cafef.vn/acb/trang-17.html\n",
      "Crawling: https://cafef.vn/shb/trang-2.html\n",
      "Crawling: https://cafef.vn/ocb/trang-5.html\n",
      "Crawling: https://cafef.vn/mbb/trang-9.html\n",
      "Crawling: https://cafef.vn/msb/trang-8.html\n",
      "Crawling: https://cafef.vn/acb/trang-18.html\n",
      "Crawling: https://cafef.vn/ocb/trang-6.html\n",
      "Crawling: https://cafef.vn/shb/trang-3.html\n",
      "Crawling: https://cafef.vn/mbb/trang-10.html\n",
      "Crawling: https://cafef.vn/acb/trang-19.html\n",
      "Crawling: https://cafef.vn/msb/trang-9.html\n",
      "Crawling: https://cafef.vn/shb/trang-4.html\n",
      "Crawling: https://cafef.vn/ocb/trang-7.html\n",
      "Crawling: https://cafef.vn/mbb/trang-11.html\n",
      "Crawling: https://cafef.vn/acb/trang-20.html\n",
      "Crawling: https://cafef.vn/shb/trang-5.html\n",
      "Crawling: https://cafef.vn/ocb/trang-8.html\n",
      "Crawling: https://cafef.vn/shb/trang-6.html\n",
      "Crawling: https://cafef.vn/acb/trang-21.html\n",
      "Crawling: https://cafef.vn/ocb/trang-9.html\n",
      "Crawling: https://cafef.vn/mbb/trang-12.html\n",
      "Crawling: https://cafef.vn/msb/trang-10.html\n",
      "Crawling: https://cafef.vn/shb/trang-7.html\n",
      "Crawling: https://cafef.vn/acb/trang-22.html\n",
      "Crawling: https://cafef.vn/mbb/trang-13.html\n",
      "✅ Found 230 articles for 'MBB'\n",
      "Crawling: https://cafef.vn/ssb.html\n",
      "Crawling: https://cafef.vn/ocb/trang-10.html\n",
      "Crawling: https://cafef.vn/ssb/trang-2.html\n",
      "Crawling: https://cafef.vn/acb/trang-23.html\n",
      "Crawling: https://cafef.vn/shb/trang-8.html\n",
      "Crawling: https://cafef.vn/msb/trang-11.html\n",
      "Crawling: https://cafef.vn/ocb/trang-11.html\n",
      "Crawling: https://cafef.vn/ssb/trang-3.html\n",
      "Crawling: https://cafef.vn/shb/trang-9.html\n",
      "Crawling: https://cafef.vn/acb/trang-24.html\n",
      "Crawling: https://cafef.vn/msb/trang-12.htmlCrawling: https://cafef.vn/ocb/trang-12.html\n",
      "\n",
      "Crawling: https://cafef.vn/ssb/trang-4.html\n",
      "Crawling: https://cafef.vn/shb/trang-10.html\n",
      "Crawling: https://cafef.vn/acb/trang-25.html\n",
      "Crawling: https://cafef.vn/ssb/trang-5.html\n",
      "Crawling: https://cafef.vn/msb/trang-13.html\n",
      "✅ Found 69 articles for 'SSB'\n",
      "Crawling: https://cafef.vn/stb.html\n",
      "Crawling: https://cafef.vn/ocb/trang-13.html\n",
      "Crawling: https://cafef.vn/acb/trang-26.html\n",
      "Crawling: https://cafef.vn/shb/trang-11.html\n",
      "Crawling: https://cafef.vn/stb/trang-2.html\n",
      "Crawling: https://cafef.vn/ocb/trang-14.html\n",
      "Crawling: https://cafef.vn/acb/trang-27.html\n",
      "Crawling: https://cafef.vn/msb/trang-14.html\n",
      "Crawling: https://cafef.vn/shb/trang-12.html\n",
      "Crawling: https://cafef.vn/stb/trang-3.html\n",
      "Crawling: https://cafef.vn/ocb/trang-15.html\n",
      "Crawling: https://cafef.vn/msb/trang-15.html\n",
      "Crawling: https://cafef.vn/stb/trang-4.html\n",
      "Crawling: https://cafef.vn/shb/trang-13.html\n",
      "Crawling: https://cafef.vn/acb/trang-28.html\n",
      "Crawling: https://cafef.vn/ocb/trang-16.html\n",
      "Crawling: https://cafef.vn/msb/trang-16.html\n",
      "✅ Found 299 articles for 'MSB'\n",
      "Crawling: https://cafef.vn/tcb.html\n",
      "Crawling: https://cafef.vn/stb/trang-5.html\n",
      "Crawling: https://cafef.vn/shb/trang-14.html\n",
      "Crawling: https://cafef.vn/acb/trang-29.html\n",
      "Crawling: https://cafef.vn/ocb/trang-17.html\n",
      "Crawling: https://cafef.vn/stb/trang-6.html\n",
      "Crawling: https://cafef.vn/shb/trang-15.html\n",
      "Crawling: https://cafef.vn/acb/trang-30.html\n",
      "Crawling: https://cafef.vn/ocb/trang-18.html\n",
      "Crawling: https://cafef.vn/tcb/trang-2.html\n",
      "Crawling: https://cafef.vn/stb/trang-7.html\n",
      "Crawling: https://cafef.vn/shb/trang-16.html\n",
      "Crawling: https://cafef.vn/acb/trang-31.html\n",
      "Crawling: https://cafef.vn/ocb/trang-19.html\n",
      "Crawling: https://cafef.vn/tcb/trang-3.html\n",
      "Crawling: https://cafef.vn/stb/trang-8.html\n",
      "Crawling: https://cafef.vn/acb/trang-32.html\n",
      "Crawling: https://cafef.vn/shb/trang-17.html\n",
      "Crawling: https://cafef.vn/tcb/trang-4.html\n",
      "Crawling: https://cafef.vn/ocb/trang-20.html\n",
      "Crawling: https://cafef.vn/stb/trang-9.html\n",
      "Crawling: https://cafef.vn/shb/trang-18.html\n",
      "Crawling: https://cafef.vn/acb/trang-33.html\n",
      "Crawling: https://cafef.vn/ocb/trang-21.html\n",
      "✅ Found 385 articles for 'OCB'\n",
      "Crawling: https://cafef.vn/tpb.html\n",
      "Crawling: https://cafef.vn/tcb/trang-5.html\n",
      "Crawling: https://cafef.vn/stb/trang-10.html\n",
      "Crawling: https://cafef.vn/shb/trang-19.html\n",
      "Crawling: https://cafef.vn/acb/trang-34.html\n",
      "Crawling: https://cafef.vn/tpb/trang-2.html\n",
      "Crawling: https://cafef.vn/tcb/trang-6.html\n",
      "Crawling: https://cafef.vn/stb/trang-11.html\n",
      "Crawling: https://cafef.vn/shb/trang-20.html\n",
      "Crawling: https://cafef.vn/tcb/trang-7.html\n",
      "Crawling: https://cafef.vn/acb/trang-35.html\n",
      "Crawling: https://cafef.vn/stb/trang-12.html\n",
      "Crawling: https://cafef.vn/tcb/trang-8.html\n",
      "Crawling: https://cafef.vn/tpb/trang-3.html\n",
      "Crawling: https://cafef.vn/shb/trang-21.html\n",
      "Crawling: https://cafef.vn/acb/trang-36.html\n",
      "Crawling: https://cafef.vn/tcb/trang-9.html\n",
      "Crawling: https://cafef.vn/stb/trang-13.html\n",
      "Crawling: https://cafef.vn/tpb/trang-4.html\n",
      "Crawling: https://cafef.vn/shb/trang-22.html\n",
      "Crawling: https://cafef.vn/acb/trang-37.html\n",
      "Crawling: https://cafef.vn/tcb/trang-10.html\n",
      "Crawling: https://cafef.vn/stb/trang-14.html\n",
      "✅ Found 257 articles for 'STB'\n",
      "Crawling: https://cafef.vn/vcb.html\n",
      "Crawling: https://cafef.vn/tpb/trang-5.html\n",
      "Crawling: https://cafef.vn/shb/trang-23.html\n",
      "Crawling: https://cafef.vn/acb/trang-38.html\n",
      "Crawling: https://cafef.vn/tcb/trang-11.html\n",
      "Crawling: https://cafef.vn/tpb/trang-6.html\n",
      "✅ Found 197 articles for 'TCB'\n",
      "Crawling: https://cafef.vn/vib.html\n",
      "✅ Found 87 articles for 'TPB'\n",
      "Crawling: https://cafef.vn/vpb.html\n",
      "Crawling: https://cafef.vn/vcb/trang-2.html\n",
      "Crawling: https://cafef.vn/shb/trang-24.html\n",
      "Crawling: https://cafef.vn/acb/trang-39.html\n",
      "Crawling: https://cafef.vn/vib/trang-2.html\n",
      "Crawling: https://cafef.vn/vpb/trang-2.html\n",
      "Crawling: https://cafef.vn/acb/trang-40.htmlCrawling: https://cafef.vn/vcb/trang-3.html\n",
      "\n",
      "✅ Found 760 articles for 'ACB'\n",
      "Crawling: https://cafef.vn/shb/trang-25.html\n",
      "Crawling: https://cafef.vn/vib/trang-3.html\n",
      "Crawling: https://cafef.vn/vpb/trang-3.html\n",
      "Crawling: https://cafef.vn/vcb/trang-4.html\n",
      "Crawling: https://cafef.vn/shb/trang-26.html\n",
      "Crawling: https://cafef.vn/vib/trang-4.html\n",
      "Crawling: https://cafef.vn/vpb/trang-4.html\n",
      "Crawling: https://cafef.vn/vcb/trang-5.html\n",
      "Crawling: https://cafef.vn/shb/trang-27.html\n",
      "Crawling: https://cafef.vn/vpb/trang-5.html\n",
      "Crawling: https://cafef.vn/vcb/trang-6.html\n",
      "Crawling: https://cafef.vn/vib/trang-5.html\n",
      "Crawling: https://cafef.vn/shb/trang-28.html\n",
      "Crawling: https://cafef.vn/vpb/trang-6.html\n",
      "Crawling: https://cafef.vn/vcb/trang-7.html\n",
      "Crawling: https://cafef.vn/vib/trang-6.html\n",
      "Crawling: https://cafef.vn/vpb/trang-7.html\n",
      "Crawling: https://cafef.vn/shb/trang-29.html\n",
      "Crawling: https://cafef.vn/vcb/trang-8.html\n",
      "Crawling: https://cafef.vn/vib/trang-7.html\n",
      "Crawling: https://cafef.vn/vpb/trang-8.html\n",
      "Crawling: https://cafef.vn/vcb/trang-9.html\n",
      "Crawling: https://cafef.vn/shb/trang-30.html\n",
      "Crawling: https://cafef.vn/vib/trang-8.html\n",
      "Crawling: https://cafef.vn/vpb/trang-9.html\n",
      "Crawling: https://cafef.vn/vcb/trang-10.html\n",
      "Crawling: https://cafef.vn/shb/trang-31.html\n",
      "Crawling: https://cafef.vn/vib/trang-9.html\n",
      "Crawling: https://cafef.vn/vpb/trang-10.html\n",
      "✅ Found 179 articles for 'VPB'\n",
      "Crawling: https://cafef.vn/vcb/trang-11.html\n",
      "Crawling: https://cafef.vn/shb/trang-32.html\n",
      "Crawling: https://cafef.vn/vib/trang-10.html\n",
      "✅ Found 617 articles for 'SHB'\n",
      "Crawling: https://cafef.vn/vcb/trang-12.html\n",
      "Crawling: https://cafef.vn/vib/trang-11.html\n",
      "Crawling: https://cafef.vn/vcb/trang-13.html\n",
      "Crawling: https://cafef.vn/vib/trang-12.html\n",
      "Crawling: https://cafef.vn/vcb/trang-14.html\n",
      "Crawling: https://cafef.vn/vcb/trang-15.html\n",
      "Crawling: https://cafef.vn/vib/trang-13.html\n",
      "Crawling: https://cafef.vn/vcb/trang-16.html\n",
      "Crawling: https://cafef.vn/vib/trang-14.html\n",
      "Crawling: https://cafef.vn/vcb/trang-17.html\n",
      "Crawling: https://cafef.vn/vib/trang-15.html\n",
      "Crawling: https://cafef.vn/vcb/trang-18.html\n",
      "✅ Found 334 articles for 'VCB'\n",
      "Crawling: https://cafef.vn/vib/trang-16.html\n",
      "Crawling: https://cafef.vn/vib/trang-17.html\n",
      "Crawling: https://cafef.vn/vib/trang-18.html\n",
      "Crawling: https://cafef.vn/vib/trang-19.html\n",
      "Crawling: https://cafef.vn/vib/trang-20.html\n",
      "Crawling: https://cafef.vn/vib/trang-21.html\n",
      "Crawling: https://cafef.vn/vib/trang-22.html\n",
      "Crawling: https://cafef.vn/vib/trang-23.html\n",
      "Crawling: https://cafef.vn/vib/trang-24.html\n",
      "Crawling: https://cafef.vn/vib/trang-25.html\n",
      "Crawling: https://cafef.vn/vib/trang-26.html\n",
      "Crawling: https://cafef.vn/vib/trang-27.html\n",
      "Crawling: https://cafef.vn/vib/trang-28.html\n",
      "Crawling: https://cafef.vn/vib/trang-29.html\n",
      "Crawling: https://cafef.vn/vib/trang-30.html\n",
      "Crawling: https://cafef.vn/vib/trang-31.html\n",
      "Crawling: https://cafef.vn/vib/trang-32.html\n",
      "Crawling: https://cafef.vn/vib/trang-33.html\n",
      "Crawling: https://cafef.vn/vib/trang-34.html\n",
      "Crawling: https://cafef.vn/vib/trang-35.html\n",
      "Crawling: https://cafef.vn/vib/trang-36.html\n",
      "Crawling: https://cafef.vn/vib/trang-37.html\n",
      "Crawling: https://cafef.vn/vib/trang-38.html\n",
      "Crawling: https://cafef.vn/vib/trang-39.html\n",
      "✅ Found 746 articles for 'VIB'\n",
      "📝 Saved 5048 records to crawled_data\\all_articles_combined.csv\n",
      "\n",
      "=== Crawling Summary ===\n",
      "Total articles: 5048\n",
      "Banks processed: 19\n",
      "Articles per bank: 265.7\n"
     ]
    }
   ],
   "source": [
    "def crawl_all_data():\n",
    "    \"\"\"Crawl all bank news data\"\"\"\n",
    "    print(\"=== CafeF Bank News Crawler Started ===\")\n",
    "\n",
    "    # Setup\n",
    "    output_dir = setup_output_directory(OUTPUT_DIR)\n",
    "    crawler = CafeFNewsCrawler(**CRAWLER_CONFIG)\n",
    "\n",
    "    # Crawl all banks\n",
    "    print(f\"\\n=== Crawling {len(BANK_KEYWORDS)} banks concurrently ===\")\n",
    "    all_articles_df = crawler.crawl_bank_news_by_keywords(BANK_KEYWORDS)\n",
    "\n",
    "    if all_articles_df.empty:\n",
    "        print(\"⚠️  No articles found!\")\n",
    "        return None\n",
    "\n",
    "    # Save all articles\n",
    "    all_file_path = save_dataframe(\n",
    "        all_articles_df,\n",
    "        \"all_articles_combined.csv\",\n",
    "        output_dir\n",
    "    )\n",
    "\n",
    "    # Crawling summary\n",
    "    print(f\"\\n=== Crawling Summary ===\")\n",
    "    print(f\"Total articles: {len(all_articles_df)}\")\n",
    "    print(f\"Banks processed: {all_articles_df['Keyword'].nunique()}\")\n",
    "    print(f\"Articles per bank: {len(all_articles_df) / all_articles_df['Keyword'].nunique():.1f}\")\n",
    "\n",
    "    return all_articles_df\n",
    "\n",
    "# Execute crawling\n",
    "raw_data = crawl_all_data()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ac65f589dc1edd1",
   "metadata": {
    "id": "1ac65f589dc1edd1"
   },
   "source": [
    "## 6. Data Processing & Filtering\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a45db34b4cae3de0",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-07-27T12:54:58.343780Z",
     "start_time": "2025-07-27T12:54:58.242352Z"
    },
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "a45db34b4cae3de0",
    "outputId": "06d83a6c-9ec6-42f3-d895-a0b61063685b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=== Data Processing Started ===\n",
      "Using freshly crawled data\n",
      "📁 Output directory: e:\\OneDriveHUST\\HUST\\20241-1.Stock Rumours\\000 - Main Article\\Data\\crawled_data\n",
      "\n",
      "=== Filtering articles for keywords: ['tin đồn', 'đính chính tin đồn', 'khẳng định thông tin lan truyền'] ===\n",
      "📝 Saved 53 records to crawled_data\\filtered_articles.csv\n",
      "✅ Found 53 filtered articles\n",
      "\n",
      "=== Filter Statistics ===\n",
      "Filter rate: 1.0%\n",
      "Banks with filtered articles: 15\n",
      "\n",
      "=== Filtered Articles per Bank ===\n",
      "Keyword\n",
      "EIB    12\n",
      "ACB     9\n",
      "STB     6\n",
      "BID     5\n",
      "MBB     4\n",
      "MSB     3\n",
      "VCB     3\n",
      "CTG     2\n",
      "SHB     2\n",
      "VIB     2\n",
      "Name: count, dtype: int64\n",
      "\n",
      "=== Processing Summary ===\n",
      "Total articles: 5048\n",
      "Filtered articles: 53\n",
      "Banks processed: 19\n"
     ]
    }
   ],
   "source": [
    "def process_and_filter_data():\n",
    "    \"\"\"Process crawled data and apply filters\"\"\"\n",
    "    print(\"=== Data Processing Started ===\")\n",
    "\n",
    "    # Load data (either from crawling or from saved file)\n",
    "    if 'raw_data' in globals() and raw_data is not None:\n",
    "        all_articles_df = raw_data\n",
    "        print(\"Using freshly crawled data\")\n",
    "    else:\n",
    "        try:\n",
    "            file_path = os.path.join(OUTPUT_DIR, \"all_articles_combined.csv\")\n",
    "            all_articles_df = pd.read_csv(file_path)\n",
    "            print(f\"Loaded data from {file_path}\")\n",
    "        except FileNotFoundError:\n",
    "            print(\"❌ No data found! Please run crawling first.\")\n",
    "            return None\n",
    "\n",
    "    if all_articles_df.empty:\n",
    "        print(\"⚠️  No data to process!\")\n",
    "        return None\n",
    "\n",
    "    # Setup output directory\n",
    "    output_dir = setup_output_directory(OUTPUT_DIR)\n",
    "\n",
    "    # Filter and save specific content\n",
    "    print(f\"\\n=== Filtering articles for keywords: {FILTER_KEYWORDS} ===\")\n",
    "    filtered_articles = filter_articles_by_keywords(all_articles_df, FILTER_KEYWORDS)\n",
    "\n",
    "    if not filtered_articles.empty:\n",
    "        filtered_file_path = save_dataframe(\n",
    "            filtered_articles,\n",
    "            \"filtered_articles.csv\",\n",
    "            output_dir\n",
    "        )\n",
    "        print(f\"✅ Found {len(filtered_articles)} filtered articles\")\n",
    "\n",
    "        # Additional filtering statistics\n",
    "        print(f\"\\n=== Filter Statistics ===\")\n",
    "        print(f\"Filter rate: {len(filtered_articles)/len(all_articles_df)*100:.1f}%\")\n",
    "        print(f\"Banks with filtered articles: {filtered_articles['Keyword'].nunique()}\")\n",
    "\n",
    "        # Show filtered articles per bank\n",
    "        print(f\"\\n=== Filtered Articles per Bank ===\")\n",
    "        bank_counts = filtered_articles['Keyword'].value_counts()\n",
    "        print(bank_counts.head(10))\n",
    "\n",
    "    else:\n",
    "        print(\"⚠️  No articles found matching filter criteria\")\n",
    "        filtered_articles = pd.DataFrame()\n",
    "\n",
    "    # Final summary\n",
    "    print(f\"\\n=== Processing Summary ===\")\n",
    "    print(f\"Total articles: {len(all_articles_df)}\")\n",
    "    print(f\"Filtered articles: {len(filtered_articles)}\")\n",
    "    print(f\"Banks processed: {all_articles_df['Keyword'].nunique()}\")\n",
    "\n",
    "    return all_articles_df, filtered_articles\n",
    "\n",
    "# Execute data processing\n",
    "processed_data = process_and_filter_data()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "393f30305661610f",
   "metadata": {
    "id": "393f30305661610f"
   },
   "source": [
    "## 7. Data Analysis (Optional)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a2aa17b5358db14c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-07-27T12:55:18.127387Z",
     "start_time": "2025-07-27T12:55:17.836831Z"
    },
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "a2aa17b5358db14c",
    "outputId": "e6afa2a2-9e04-4d54-d6e9-112cf22cf3bf"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=== Data Analysis ===\n",
      "Total articles: 5048\n",
      "Filtered articles: 53\n",
      "Banks covered: 19\n",
      "Date range: 01-01-2017 - 16:07 PM to Unknown\n",
      "\n",
      "=== All Articles per Bank (Top 10) ===\n",
      "Keyword\n",
      "ACB    760\n",
      "VIB    746\n",
      "SHB    617\n",
      "OCB    385\n",
      "VCB    334\n",
      "MSB    299\n",
      "STB    257\n",
      "MBB    230\n",
      "TCB    197\n",
      "EIB    193\n",
      "Name: count, dtype: int64\n",
      "\n",
      "=== Filtered Articles per Bank ===\n",
      "Keyword\n",
      "EIB    12\n",
      "ACB     9\n",
      "STB     6\n",
      "BID     5\n",
      "MBB     4\n",
      "MSB     3\n",
      "VCB     3\n",
      "CTG     2\n",
      "SHB     2\n",
      "VIB     2\n",
      "HDB     1\n",
      "NVB     1\n",
      "SSB     1\n",
      "TCB     1\n",
      "VPB     1\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "def analyze_results():\n",
    "    \"\"\"Analyze crawled and processed data\"\"\"\n",
    "    try:\n",
    "        # Load all articles\n",
    "        all_file = os.path.join(OUTPUT_DIR, \"all_articles_combined.csv\")\n",
    "        df_all = pd.read_csv(all_file)\n",
    "\n",
    "        # Load filtered articles\n",
    "        filtered_file = os.path.join(OUTPUT_DIR, \"filtered_articles.csv\")\n",
    "        try:\n",
    "            df_filtered = pd.read_csv(filtered_file)\n",
    "        except FileNotFoundError:\n",
    "            df_filtered = pd.DataFrame()\n",
    "\n",
    "        print(\"=== Data Analysis ===\")\n",
    "        print(f\"Total articles: {len(df_all)}\")\n",
    "        print(f\"Filtered articles: {len(df_filtered)}\")\n",
    "        print(f\"Banks covered: {df_all['Keyword'].nunique()}\")\n",
    "\n",
    "        if 'Time' in df_all.columns:\n",
    "            print(f\"Date range: {df_all['Time'].min()} to {df_all['Time'].max()}\")\n",
    "\n",
    "        # Articles per bank (all data)\n",
    "        print(\"\\n=== All Articles per Bank (Top 10) ===\")\n",
    "        print(df_all['Keyword'].value_counts().head(10))\n",
    "\n",
    "        # Filtered articles per bank\n",
    "        if not df_filtered.empty:\n",
    "            print(\"\\n=== Filtered Articles per Bank ===\")\n",
    "            print(df_filtered['Keyword'].value_counts())\n",
    "\n",
    "    except FileNotFoundError:\n",
    "        print(\"❌ No data files found. Run crawling and processing first.\")\n",
    "\n",
    "# Uncomment to run analysis\n",
    "analyze_results()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0QWN_RI0UXW3",
   "metadata": {
    "id": "0QWN_RI0UXW3"
   },
   "source": [
    "Phân tích sentiment - phân loại rumor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "212sRpMNYjk6",
   "metadata": {
    "id": "212sRpMNYjk6"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 24.0 -> 25.2\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "# Cài đặt các thư viện cần thiết\n",
    "# !pip install -q transformers underthesea pandas\n",
    "!pip install -q underthesea"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "MK5e3ICMYqBN",
   "metadata": {
    "id": "MK5e3ICMYqBN"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tqdm\\auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n",
      "  from .autonotebook import tqdm as notebook_tqdm\n",
      "Device set to use cpu\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   Keyword                   Time  \\\n",
      "0      ACB  08-01-2025 - 18:32 PM   \n",
      "1      ACB                Unknown   \n",
      "2      ACB  26-11-2021 - 11:09 AM   \n",
      "3      ACB  09-04-2018 - 19:25 PM   \n",
      "4      ACB  17-10-2017 - 15:32 PM   \n",
      "5      ACB  05-10-2016 - 15:21 PM   \n",
      "6      ACB  28-02-2014 - 09:14 AM   \n",
      "7      ACB  27-02-2014 - 23:01 PM   \n",
      "8      ACB  13-05-2013 - 08:56 AM   \n",
      "9      BID  30-11-2018 - 16:06 PM   \n",
      "10     BID  09-08-2017 - 21:38 PM   \n",
      "11     BID  27-08-2015 - 19:33 PM   \n",
      "12     BID  24-08-2015 - 12:20 PM   \n",
      "13     BID  03-07-2015 - 20:41 PM   \n",
      "14     CTG  24-08-2015 - 12:20 PM   \n",
      "15     CTG  14-04-2015 - 00:34 AM   \n",
      "16     EIB  19-11-2024 - 20:00 PM   \n",
      "17     EIB  14-02-2022 - 19:00 PM   \n",
      "18     EIB  31-01-2022 - 18:15 PM   \n",
      "19     EIB  27-12-2021 - 11:10 AM   \n",
      "20     EIB  24-11-2021 - 20:59 PM   \n",
      "21     EIB  11-11-2021 - 11:10 AM   \n",
      "22     EIB  09-11-2021 - 21:58 PM   \n",
      "23     EIB  22-05-2016 - 09:51 AM   \n",
      "24     EIB  12-10-2015 - 08:00 AM   \n",
      "25     EIB  28-09-2015 - 09:29 AM   \n",
      "26     EIB  11-09-2015 - 21:10 PM   \n",
      "27     EIB  14-11-2013 - 21:11 PM   \n",
      "28     HDB  24-11-2021 - 20:59 PM   \n",
      "29     MBB  26-11-2021 - 11:09 AM   \n",
      "30     MBB  01-08-2017 - 09:36 AM   \n",
      "31     MBB  23-06-2015 - 08:22 AM   \n",
      "32     MBB  15-06-2015 - 17:56 PM   \n",
      "33     MSB  31-01-2022 - 18:15 PM   \n",
      "34     MSB  18-11-2021 - 15:43 PM   \n",
      "35     MSB  09-08-2016 - 11:50 AM   \n",
      "36     NVB  31-01-2022 - 18:15 PM   \n",
      "37     SHB  02-02-2022 - 10:27 AM   \n",
      "38     SHB  14-04-2017 - 17:35 PM   \n",
      "39     SSB  31-01-2022 - 18:15 PM   \n",
      "40     STB  26-04-2024 - 10:00 AM   \n",
      "41     STB  21-07-2023 - 09:35 AM   \n",
      "42     STB  26-11-2021 - 11:09 AM   \n",
      "43     STB  27-09-2020 - 19:55 PM   \n",
      "44     STB  22-09-2020 - 20:17 PM   \n",
      "45     STB  03-08-2017 - 08:45 AM   \n",
      "46     TCB  26-11-2021 - 11:09 AM   \n",
      "47     VCB  24-11-2021 - 20:59 PM   \n",
      "48     VCB  24-08-2015 - 12:20 PM   \n",
      "49     VCB  02-07-2015 - 19:25 PM   \n",
      "50     VIB  11-09-2025 - 00:19 AM   \n",
      "51     VIB  09-04-2018 - 19:25 PM   \n",
      "52     VPB  24-11-2021 - 20:59 PM   \n",
      "\n",
      "                                                Title    Cảm xúc  \n",
      "0   Bộ Công an trả lời về thông tin \"lãnh đạo Ngân...   Tiêu cực  \n",
      "1   Chuyện ít biết về CEO có nhiệm kỳ dài nhất, gắ...  Trung lập  \n",
      "2   Cổ phiếu ngân hàng nổi sóng: Mã nào hút nhiều ...   Tích cực  \n",
      "3    Những “điểm nóng” của mùa đại hội ngân hàng 2018   Tích cực  \n",
      "4   Ai đã bán ra 74 triệu cổ phiếu ACB trong cú tr...  Trung lập  \n",
      "5   Sau một thời gian dài nằm im, ACB dậy sóng, gi...   Tích cực  \n",
      "6                                     Bầu Kiên & vàng   Tiêu cực  \n",
      "7                                     Bầu Kiên & vàng  Trung lập  \n",
      "8                              HDBank “nuốt” DaiABank   Tích cực  \n",
      "9   Cổ phiếu BIDV tăng điểm sau khi cựu Chủ tịch T...   Tiêu cực  \n",
      "10  Những “tội đồ” nào đã khiến VnIndex có phiên g...   Tiêu cực  \n",
      "11  Cổ phiếu đáng chú ý ngày 27/8: GAS- BID dẫn dắ...   Tiêu cực  \n",
      "12                                1 tháng và 100 điểm   Tiêu cực  \n",
      "13  Cổ phiếu đáng chú ý ngày 3/7: SSI và BID hút m...   Tích cực  \n",
      "14                                1 tháng và 100 điểm   Tiêu cực  \n",
      "15  Vietinbank dự chi hơn 3.700 tỷ đồng để chia cổ...   Tích cực  \n",
      "16  Eximbank phủ nhận thông tin bị NHNN thanh tra ...   Tiêu cực  \n",
      "17  Eximbank họp cổ đông ngày 15/2: Quyết định ''c...  Trung lập  \n",
      "18  Cổ phiếu ngân hàng nào mang lại nhiều tài lộc ...   Tích cực  \n",
      "19           Cổ phiếu Eximbank vẫn tiếp tục tăng trần   Tích cực  \n",
      "20  Cổ phiếu ngân hàng nào tăng giá mạnh nhất kể t...   Tích cực  \n",
      "21  Sau hàng loạt giao dịch thoả thuận với khối lư...  Trung lập  \n",
      "22  Gần 356 triệu cổ phiếu EIB của Eximbank được s...   Tích cực  \n",
      "23  Đằng sau câu chuyện “tranh giành ghế” vào HĐQT...   Tiêu cực  \n",
      "24                    Kịch bản nào đang chờ Eximbank?   Tiêu cực  \n",
      "25  Ông Lê Hùng Dũng ra đi, Eximbank vào vòng xoáy...   Tiêu cực  \n",
      "26                 Góc nhìn khác về vấn đề ở Eximbank  Trung lập  \n",
      "27  Eximbank: Lợi nhuận 9 tháng giảm hơn một nửa, ...  Trung lập  \n",
      "28  Cổ phiếu ngân hàng nào tăng giá mạnh nhất kể t...   Tích cực  \n",
      "29  Cổ phiếu ngân hàng nổi sóng: Mã nào hút nhiều ...   Tích cực  \n",
      "30                          Cổ phiếu \"họ MB\" nổi sóng   Tích cực  \n",
      "31          Trước giờ giao dịch 23/06: Có gì tại MBB?   Tích cực  \n",
      "32  Cổ phiếu đáng chú ý ngày 15/6: JVC “ngừng rơi”...   Tiêu cực  \n",
      "33  Cổ phiếu ngân hàng nào mang lại nhiều tài lộc ...   Tích cực  \n",
      "34  ''Giờ G'' sắp điểm, ai sẽ thay Petrolimex cầm ...   Tích cực  \n",
      "35  Chủ tịch Maritime Bank gửi thư trấn an cán bộ ...  Trung lập  \n",
      "36  Cổ phiếu ngân hàng nào mang lại nhiều tài lộc ...   Tích cực  \n",
      "37  Chân dung doanh nhân tuổi Nhâm Dần Đỗ Quang Hi...   Tích cực  \n",
      "38              Điều gì đang xảy ra với cổ phiếu SHB?   Tích cực  \n",
      "39  Cổ phiếu ngân hàng nào mang lại nhiều tài lộc ...   Tích cực  \n",
      "40  ĐHĐCĐ Sacombank: Ông Dương Công Minh khẳng địn...   Tích cực  \n",
      "41  Cho 9 khách hàng vay gần nửa số vốn tự có, Sac...   Tích cực  \n",
      "42  Cổ phiếu ngân hàng nổi sóng: Mã nào hút nhiều ...   Tích cực  \n",
      "43  10 cổ phiếu tăng/giảm mạnh nhất tuần: STB và O...   Tích cực  \n",
      "44       Thaco phủ nhận tin đồn mua cổ phần Sacombank  Trung lập  \n",
      "45              Đại gia Trầm Bê và bức boong-ke bị vỡ  Trung lập  \n",
      "46  Cổ phiếu ngân hàng nổi sóng: Mã nào hút nhiều ...   Tích cực  \n",
      "47  Cổ phiếu ngân hàng nào tăng giá mạnh nhất kể t...   Tích cực  \n",
      "48                                1 tháng và 100 điểm   Tiêu cực  \n",
      "49  Cổ phiếu đáng chú ý ngày 2/7: Đối lập hình ảnh...   Tích cực  \n",
      "50  HSBC: Nâng hạng thị trường - Hòa Phát, Vingrou...   Tiêu cực  \n",
      "51   Những “điểm nóng” của mùa đại hội ngân hàng 2018   Tích cực  \n",
      "52  Cổ phiếu ngân hàng nào tăng giá mạnh nhất kể t...   Tích cực  \n"
     ]
    }
   ],
   "source": [
    "# Phân tích sentiment - phân loại rumor\n",
    "import torch\n",
    "from transformers import RobertaForSequenceClassification, AutoTokenizer, pipeline\n",
    "import pandas as pd\n",
    "from underthesea import word_tokenize\n",
    "\n",
    "# Tải tokenizer và mô hình\n",
    "tokenizer = AutoTokenizer.from_pretrained(\"wonrax/phobert-base-vietnamese-sentiment\", use_fast=False)\n",
    "model = RobertaForSequenceClassification.from_pretrained(\"wonrax/phobert-base-vietnamese-sentiment\")\n",
    "\n",
    "# Pipeline phân loại cảm xúc\n",
    "classifier = pipeline(\"sentiment-analysis\", model=model, tokenizer=tokenizer, device=0 if torch.cuda.is_available() else -1)\n",
    "\n",
    "# Hàm xử lý nội dung văn bản tiếng Việt\n",
    "def classify_sentiment_vi(text):\n",
    "    if pd.isna(text) or text.strip() == \"\":\n",
    "        return 'Trung lập'\n",
    "    \n",
    "    # Tiền xử lý: tách từ\n",
    "    text = word_tokenize(str(text), format=\"text\")\n",
    "    result = classifier(text[:512])  # Giới hạn token nếu quá dài\n",
    "    label = result[0]['label']\n",
    "\n",
    "    if label == 'POS':\n",
    "        return 'Tích cực'\n",
    "    elif label == 'NEG':\n",
    "        return 'Tiêu cực'\n",
    "    else:\n",
    "        return 'Trung lập'\n",
    "\n",
    "# Load dữ liệu đã lọc\n",
    "df_filtered = pd.read_csv(\"crawled_data/filtered_articles.csv\")\n",
    "\n",
    "# Áp dụng phân tích sentiment\n",
    "df_filtered[\"Cảm xúc\"] = df_filtered[\"Content\"].apply(classify_sentiment_vi)\n",
    "\n",
    "# Hiển thị kết quả\n",
    "print(df_filtered[[\"Keyword\", \"Time\", \"Title\", \"Cảm xúc\"]])\n",
    "\n",
    "# Lưu kết quả\n",
    "df_filtered.to_csv(\"crawled_data/filtered_articles_with_sentiment.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bb7a1271",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Admin\\AppData\\Local\\Temp\\ipykernel_9184\\1601368641.py:4: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n",
      "  raw_data[\"Time\"] = pd.to_datetime(raw_data[\"Time\"], errors=\"coerce\", dayfirst=True)\n"
     ]
    }
